// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  updateUt  DateTime  @updatedAt
} 

model Customer {
  id               Int      @id @default(autoincrement())
  name             String
  email            String   @unique
  externalCustomerId String? @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  invoices         Invoice[]
}

model Invoice {
  id               Int      @id @default(autoincrement())
  customerId       Int
  customer         Customer @relation(fields: [customerId], references: [id])
  amount           Float
  status           String   // e.g., "Paid", "Unpaid", "Past Due"
  dueDate          DateTime
  externalInvoiceId String? @unique(map: "unique_externalInvoiceId_when_not_null")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  logs             InvoiceLog[]
}

model InvoiceLog {
  id        Int      @id @default(autoincrement())
  invoiceId Int
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
  field     String
  oldValue  String
  newValue  String
  timestamp DateTime @default(now())
}